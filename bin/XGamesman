#!/usr/bin/env wish

#############################################################################
##
## NAME:         Xgamesman
##
## DESCRIPTION:  An application to launch the GAMESMAN programs. It brings
##               up a window with a bitmap button of each game, and when
##               the user clicks on the button, it runs the program for that
##               game. There is also a quit button
##
## AUTHOR:       Dan Garcia  -  University of California at Berkeley
##               Copyright (C) Dan Garcia, 1995. All rights reserved.
##
## DATE:         05-24-95
##
## UPDATE HIST:
##
## 05-24-95 1.0    : Final release code for M.S.
## 03-02-96 1.1    : Updated it for tcl 7.5 and color icons
##
## TODO: Make the frame scroll!
##
#############################################################################

#############################################################################
##
## CreateButtonLauncher
##
## Create a front-end to launch the various GAMESMAN modules.
##
#############################################################################

proc CreateButtonLauncher { theBitmapDir thePrograms theStrings theGuiTypes} {
    
    global tcl_platform
    if { $tcl_platform(platform) == "windows" } {
        set kLabelFont { Helvetica 10 bold }
    } else {
        set kLabelFont { Helvetica 14 bold }
    }
    set kLabelColor grey40
    set theMaxButtonSize 0
    set theNumberOfPrograms [llength $thePrograms]
    
    wm title . "GAMESMAN - Click on a button to start the program"
    
    button .butQuit -text "Quit" -font $kLabelFont -command exit
    pack append . .butQuit { bottom fill }
    
    ## the number of columns of buttons
    ## the padding between buttons
    ## and the extra space between the rows of buttons

##  5 columns of games for now Jonathan Tsai 2004.04.18
    set cols 7
##   set cols [getColumns $theNumberOfPrograms]
    set rows [getRows $theNumberOfPrograms $cols]

    set pad 40
    set under 50
    
    set c .fall.c
    set w .fall
    
    frame $w

# conditionals: if expr1 ?then? body1 elseif expr2 ?then? body2 elseif ... ?else? ?bodyN?

##### commented lines that makes scrollbar with #scroll#
##### Jonathan Tsai 2004.04.19

    set width  [expr {($pad+100)*$cols+$pad}]
    set height [expr {(($under+151)*$rows)+$under}]
    set littleheight [expr {$under/2+($under+100)*$rows}]
    set la [concat 0 0 $width $height]
    
if {[shouldScrollH] && [shouldScrollV]} {
    scrollbar $w.hscroll -orient horiz -command "$c xview"
    scrollbar $w.vscroll -orient vertical -command "$c yview"
    canvas $c -width $width -height $littleheight -relief sunken -borderwidth 2 -scrollregion $la \
	    -xscrollcommand "$w.hscroll set"\
	    -yscrollcommand "$w.vscroll set"
    grid $w.vscroll -in $w -padx 1 -pady 1 \
	    -row 0 -column 1 -rowspan 1 -columnspan 1 -sticky news
    grid $w.hscroll -in $w -padx 1 -pady 1 \
	    -row 1 -column 0 -rowspan 1 -columnspan 1 -sticky news
} elseif {[shouldScrollH]} {
    scrollbar $w.hscroll -orient horiz -command "$c xview"
    canvas $c -width $width -height $littleheight -relief sunken -borderwidth 2 -scrollregion $la \
	    -xscrollcommand "$w.hscroll set"
    grid $w.hscroll -in $w -padx 1 -pady 1 \
	    -row 1 -column 0 -rowspan 1 -columnspan 1 -sticky news
} elseif {[shouldScrollV]} {
    scrollbar $w.vscroll -orient vertical -command "$c yview"
    canvas $c -width $width -height $littleheight -relief sunken -borderwidth 2 -scrollregion $la \
	    -yscrollcommand "$w.vscroll set"
    grid $w.vscroll -in $w -padx 1 -pady 1 \
	    -row 0 -column 1 -rowspan 1 -columnspan 1 -sticky news
} else {
    canvas $c -width $width -height $littleheight -relief sunken -borderwidth 2 -scrollregion $la
}

    pack $w -expand yes -fill both -padx 1 -pady 1
    grid rowconfig    $w 0 -weight 1 -minsize 0
    grid columnconfig $w 0 -weight 1 -minsize 0
    
    grid $c -padx 1 -in $w -pady 1 \
	    -row 0 -column 0 -rowspan 1 -columnspan 1 -sticky news
        
    pack .fall -fill both

    for { set i 0 } { $i < $theNumberOfPrograms } { incr i } {
		set theProgram "./Xm[lindex $thePrograms $i]"
		set theGif "$theBitmapDir/[lindex $thePrograms $i]100.gif"
		set theColor [lindex $theGuiTypes $i]
		catch { image delete image$i }
		image create photo image$i -file $theGif
		set theString [lindex $theStrings $i]
		set borderWidth 5
	
		button $c.butBitmap$i \
			-image image$i \
	        	-bg $theColor \
	        	-borderwidth $borderWidth \
			-command "exec /usr/bin/env wish -f $theProgram &"

		#set upperLeftx [expr {$pad+(100+$pad)*($i%$cols)-5}] 
		#set upperLefty [expr {$under/2+($under+100)*($i/$cols) - 5}]
		#$c create rectangle $upperLeftx $upperLefty [expr $upperLeftx + 110] [expr $upperLefty + 110] -fill $theColor

		$c create window [expr {$pad+(100+$pad)*($i%$cols)}] [expr {$under/2+($under+100)*($i/$cols)}] -window $c.butBitmap$i -anchor nw
		$c create text [expr {$pad+(100+$pad)*($i%$cols)+50+$borderWidth}] [expr {$under/2+($under+100)*($i/$cols)+100+$under/4}] -text $theString -anchor n -font $kLabelFont

    }

}

#############################################################################
##
## shouldScrollV
##
## returns whether the menu should scroll vertically or not
##
#############################################################################

proc shouldScrollV {} {
     return false
}

#############################################################################
##
## shouldScrollH
##
## returns whether the menu should scroll horizontally or not
##
#############################################################################

proc shouldScrollH {} {
     return false
}

#############################################################################
##
## getColumns
##
##  given the number of games, returns the number of columns 
## 	this window should have
##
##  If the number of games is less than 2, then return defaul number
## 	of colums (i.e., 1). 
##	 If the number of games is 2 or greater, return the 
##		next smallest integer that divides the number of games evenly.
##
##
##  Commented out code does the following:
##
##  basically it tries to choose the number of columns so that 
##		the window will be a square, so it uses the square root.
##
#############################################################################
proc getColumns { numGames } {
	
	## default number of columns = 1
	set result 1

	## check for small numGames
	if { $numGames < 2 } {
		return $result
	}

	incr result
	
	set root2 [expr int(sqrt($numGames))]

	set result [expr $root2 - [expr $numGames % $root2]]

  	#set result [expr int( sqrt($numGames)) + 1 ]

## NOTE: for the below code, I assumed
## * more than 7 columns will be too big for the screen, so if it's > 7
##    just return 7.  If this is bad, just comment it out.
## signed: Jesse PHillips fall 2003
    if {$result > 7} {
		set result 7
    }

    return $result
}


#############################################################################
##
## getRows
##
## given the number of programs, returns the number of rows there should be
##
#############################################################################

proc getRows { numGames numCols } {
    set result 0
    if { [expr $numGames % $numCols] == 0 } {
	set result [expr $numGames / $numCols]
    } else {
	set result [expr $numGames / $numCols + 1]
    }

## NOTE: for this code, I assumed that more than 5 rows would be too big
##       for the screen.  If this is bad, just comment it out.
## signed: jesse Phillips fall 2003
    if { $result > 5 } {
	set result 5
    }
    return $result
}

#############################################################################
##
## main
##
## Make it so that it's similar to C a wee bit.
##
#############################################################################

proc main {} {

    set theBitmapDir "../bitmaps"

    set thePrograms { 1210 abalone achi asalto change ctoi dao dinododgem dodgem dnb hshogi iceblocks lewth lite3 mancala tore nim ooe othello qx rubix seega slideN snake tactix ttt3 wuzhi sim win4\
			   Lgame \
			   3spot con cmass foxes stt }
    ### Removed ttt (silver version) ddg 2004-04-18

    set theStrings  { "1,2,...,10" "Abalone" "Achi" "Asalto" "Change!" "Chung-Toi" "Dao" "Dino Dodgem" "Dodgem" "Dots and Boxes" "Hasami Shogi" "Ice Blocks" "Lewthwaite's Game" "Lite-3" "Mancala" "Mu Torere" "Nim" "Odd or Even" "Othello" "QuickCross" "Rubix Magic" "Seega" "Slide-N" "Snake" "Tac Tix" "Tic-Tac-Toe" "Wuzhi" "Sim" "Connect-4"\
			   "L Game" \
			  "3-Spot" "Connections!" "Critical Mass" "Foxes and Geese" "Shift-Tac-Toe" }
    ### Removed Tic-Tac-Toe (silver version) ddg 2004-04-18

    set theGuiTypes { gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold gold\
			  gold grey \
			  brown brown brown brown brown }
    ### Removed grey (for Tic-Tac-Toe)


    ### Give it a Nostalgic, tcl7.3 look
    ### tk_setPalette bisque1


    CreateButtonLauncher $theBitmapDir $thePrograms $theStrings $theGuiTypes


    #bind .fall <Configure> "puts [. cget -width]; .fall.c configure -width [. cget -width]"
}

### Call the main procedure.

main


##### Revision Logs #####
##$Log: not supported by cvs2svn $
##Revision 1.6  2006/11/16 03:31:01  eudean
##Added Dodgem and Dots and Boxes to gold.
##
##Revision 1.5  2006/04/16 05:24:06  eudean
##Updated to reflect Connect-4 going gold.
##
##Revision 1.4  2006/03/20 07:29:19  dmchan
##sim is gold, OCD made me do it
##
##Revision 1.3  2006/02/01 08:12:32  ddgarcia
##Updated it (phew) to display the *35* (rather than 20) working X games! -dan
##
##Revision 1.2  2005/10/20 22:25:32  hevanm
##Changed hard-coded lauching command in XGamesman to /usr/bin/env wish
##
##Revision 1.1  2005/10/14 00:01:15  hevanm
##Dan found a way to invoke wish from the scripts without manually detecting its path. I am therefore removing all the .in files and code in the configure scripts that do the manual detection. From now on make sure you have wish in your path.
##
##Revision 1.14  2005/04/14 01:29:46  ogren
##Renamed 3dot to 3spot -Elmer
##
##Revision 1.13  2005/01/14 07:53:01  reyjeffc
##Tactix is now gold.
##
##January 13, 2005
##Jeffrey Chiang
##
##Revision 1.12  2005/01/10 17:28:17  reyjeffc
##Changed XGamesman.in and Xmlite3 to reflect gold status
##
##Hmm, I just realized I probably said 2004 in my previous update...
##
##January 10, 2005
##Jeffrey
##
##Revision 1.11  2004/10/10 05:35:39  angell0rd
##? gamesman/.project
##? gamesman/Makefile
##? gamesman/config.log
##? gamesman/config.status
##? gamesman/bin/XGamesman
##? gamesman/bin/data
##? gamesman/lib/libm1210.dll
##? gamesman/lib/libm3spot.dll
##? gamesman/lib/libmLgame.dll
##? gamesman/lib/libmachi.dll
##? gamesman/lib/libmasalto.dll
##? gamesman/lib/libmblocking.dll
##? gamesman/lib/libmchange.dll
##? gamesman/lib/libmcmass.dll
##? gamesman/lib/libmcon.dll
##? gamesman/lib/libmctoi.dll
##? gamesman/lib/libmdinododgem.dll
##? gamesman/lib/libmdnb.dll
##? gamesman/lib/libmdodgem.dll
##? gamesman/lib/libmfoxes.dll
##? gamesman/lib/libmhorse.dll
##? gamesman/lib/libmlite3.dll
##? gamesman/lib/libmmancala.dll
##? gamesman/lib/libmnim.dll
##? gamesman/lib/libmothello.dll
##? gamesman/lib/libmqx.dll
##? gamesman/lib/libmrInfin2.dll
##? gamesman/lib/libmrubix.dll
##? gamesman/lib/libmsim.dll
##? gamesman/lib/libmslideN.dll
##? gamesman/lib/libmsnake.dll
##? gamesman/lib/libmstt.dll
##? gamesman/lib/libmswans.dll
##? gamesman/lib/libmtactix.dll
##? gamesman/lib/libmttt.dll
##? gamesman/lib/libmwin4.dll
##? gamesman/lib/libmwinkers.dll
##? gamesman/src/Makefile
##? gamesman/tcl/m12102.tcl
##Index: gamesman/bin/XGamesman.in
##===================================================================
##RCS file: /cvsroot/gamescrafters/gamesman/bin/XGamesman.in,v
##retrieving revision 1.10
##diff -r1.10 XGamesman.in
##257c257
##<     set theGuiTypes { gold gold gold gold gold gold grey grey grey grey grey grey grey grey brown brown brown brown brown brown }
##---
##>     set theGuiTypes { gold gold gold gold gold gold gold grey grey grey grey grey grey grey brown brown brown brown brown brown }
##Index: gamesman/bin/Xm1210
##===================================================================
##RCS file: /cvsroot/gamescrafters/gamesman/bin/Xm1210,v
##retrieving revision 1.1.1.1
##diff -r1.1.1.1 Xm1210
##1c1
##< #!/usr/sww/bin/wish -f
##---
##> #!/bin/wish -f
##5c5
##< ## NAME:         Xm1210
##---
##> ## NAME:
##7,17c7,10
##< ## DESCRIPTION:  The source code for the Tcl component of the game 1,2,...,10
##< ##               for the Master's project GAMESMAN
##< ##
##< ## AUTHOR:       Dan Garcia  -  University of California at Berkeley
##< ##               Copyright (C) Dan Garcia, 1995. All rights reserved.
##< ##
##< ## DATE:         05-12-95
##< ##
##< ## UPDATE HIST:
##< ##
##< ## 05-15-95 1.0    : Final release code for M.S.
##---
##> ## DESCRIPTION:
##> ## AUTHOR:
##> ## DATE:
##> ## UPDATE HISTORY:
##39a33,36
##> ### Now source the rest of the game-playing interface code.
##>
##> source "$kRootDir/../tcl/gamesman3.tcl"
##>
##42c39,43
##< source "$kRootDir/../tcl/m1210.tcl"
##---
##> source "$kRootDir/../tcl/m12102.tcl"
##>
##> main $kRootDir
##>
##>
##44d44
##< ### Now source the rest of the game-playing interface code.
##46d45
##< source "$kRootDir/../tcl/gamesman.tcl"
##
##Revision 1.10  2004/05/19 16:33:57  jontsai
##functions, shouldScrollH and shouldScrollV to true or false
##Jonathan Tsai jontsai@berkeley.edu
##
##Revision 1.9  2004/04/25 07:17:36  bryonr
##Updated Sim to use the silver GUI
##
##Revision 1.8  2004/04/19 10:29:53  jontsai
##commented out scrollbars with #scroll# Jonathan Tsai
##
##Revision 1.7  2004/04/19 09:48:41  jontsai
##Jonathan Tsai jontsai@berkeley
##
##Revision 1.6  2004/04/19 01:57:11  ddgarcia
##
##Removed ttt (silver) from the list, leaving 20 games (4x5, soon to be 5x4).
##We already have ttt (gold), there's no reason we need silver anymore. BUT
##we can use it as a buffer in case we need the ROWSxCOLUMNS numbers to work out.
##
##Revision 1.5  2004/04/17 09:14:49  ogren
##Generalized the getColumns function a little more.  It now takes the largest integer smaller than or equal to the square root of the number of games that divides the number of games evenly (i need writing lessons, no?).  The game buttons are still scrolling above the top border, however.  -Elmer
##
##Revision 1.4  2004/04/17 08:45:09  ogren
##Increased the under offset to under+151 when calculating height.  It's a kludgy hack, but works until I figure out how to properly create the window height.  Also, columns are now the smallest integer greater than 1 that divides the number of games evenly, which is probably just as bad as my hard-coding the number 3 but,yeah, temporary =P.  -Elmer
##
##Revision 1.3  2004/04/17 07:14:55  ogren
##Shift-Tac-Toe is now available on the XGamesman menu.  Total Games = 21, so I still have to move the rows and columns around.  Also, the bitmap for stt is 1210, so that might need changing...  Also moved some commented obsolete code around, can I delete those?  -Elmer
##
