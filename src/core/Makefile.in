##############################################################################
#
#  Makefile for GAMESMAN
#  The Finite, Two-person Perfect-Information Game Generator
#
#  (G)ame-independent
#  (A)utomatic
#  (M)ove-tree
#  (E)xhaustive
#  (S)earch,
#  (M)anipulation
#  (A)nd
#  (N)avigation
#
#  GamesCrafters Research Group, UC Berkeley
#  Supervised by Dan Garcia <ddgarcia@cs.berkeley.edu>
#
##############################################################################

# @WARNGC@ Makefile.in
# @configure_input@

CC		= @CC@
CFLAGS		= @CFLAGS@ @TCLCFLAGS@ @GMPCFLAGS@ @XMLCFLAGS@ -std=gnu99
AR		= @AR@ cr
RANLIB		= @RANLIB@

LIBSUFFIX	= @LIBSUFFIX@
OBJSUFFIX	= @OBJSUFFIX@
EXESUFFIX	= @EXESUFFIX@


##############################################################################
### Files

INTERACT_OBJ	= interact$(OBJSUFFIX)
ANALYSIS_OBJ	= analysis$(OBJSUFFIX)
CONSTANTS_OBJ	= constants$(OBJSUFFIX)
GLOBALS_OBJ	= globals$(OBJSUFFIX)
DEBUG_OBJ	= debug$(OBJSUFFIX)
GAMEPLAY_OBJ	= gameplay$(OBJSUFFIX)
MAIN_OBJ	= main$(OBJSUFFIX)
MISC_OBJ	= misc$(OBJSUFFIX)
MLIB_OBJ = mlib$(OBJSUFFIX)
AUTOGUI_STRINGS_OBJ = autoguistrings$(OBJSUFFIX)
TEXTUI_OBJ	= textui$(OBJSUFFIX)
STRINGBUILDER_OBJ = StringBuilder$(OBJSUFFIX)
VISUALIZATION_OBJ = visualization$(OBJSUFFIX)
MEMWATCH_OBJ = memwatch$(OBJSUFFIX)
LEVELFILE_OBJ = levelfile_generator$(OBJSUFFIX)

DB_OBJ		= db$(OBJSUFFIX)
MEMDB_OBJ	= memdb$(OBJSUFFIX)
BPDB_OBJ	= bpdb$(OBJSUFFIX)
BPDB_BITLIB_OBJ = bpdb_bitlib$(OBJSUFFIX)
BPDB_SCHEMES_OBJ= bpdb_schemes$(OBJSUFFIX)
BPDB_MISC_OBJ	= bpdb_misc$(OBJSUFFIX)
TWOBITDB_OBJ	= twobitdb$(OBJSUFFIX)
COLLDB_OBJ	= colldb$(OBJSUFFIX)
HTTPCLIENT_OBJ	= httpclient$(OBJSUFFIX)
NETDB_OBJ	= netdb$(OBJSUFFIX)
FILEDB_OBJ  = filedb$(OBJSUFFIX)
QUARTODB_OBJ= quartodb$(OBJSUFFIX)
TIERDB_OBJ	= tierdb$(OBJSUFFIX)
SHARDDB_OBJ = sharddb$(OBJSUFFIX)
SYMDB_OBJ	= symdb$(OBJSUFFIX)

ifneq (@GMPCFLAGS@,)
UNIVHT_OBJ	= univht$(OBJSUFFIX)
UNIVDB_OBJ	= univdb$(OBJSUFFIX)
endif

SEVAL_OBJ	= seval$(OBJSUFFIX)

HASH_OBJ	= hash$(OBJSUFFIX)
HASHWINDOW_OBJ	= hashwindow$(OBJSUFFIX)

SOLVER_STD	= solvestd$(OBJSUFFIX)
SOLVER_LOOPY	= solveloopy$(OBJSUFFIX)
SOLVER_LOOPYGA	= solveloopyga$(OBJSUFFIX)
SOLVER_ZERO	= solvezero$(OBJSUFFIX)
SOLVER_LOOPYUP	= solveloopyup$(OBJSUFFIX)
SOLVER_BOTTOMUP = solvebottomup$(OBJSUFFIX)
SOLVER_ALPHABETA = solveweakab$(OBJSUFFIX)
SOLVER_RETROGRADE = solveretrograde$(OBJSUFFIX)
SOLVER_OPENPOSITIONS = openPositions$(OBJSUFFIX)
SOLVER_VS_STD = solvevsstd$(OBJSUFFIX)
SOLVER_VS_LOOPY	= solvevsloopy$(OBJSUFFIX)
SOLVER_LOOPYPD	= solveloopypd$(OBJSUFFIX)

##############################################################################
### Files

CORE=$(ANALYSIS_OBJ) $(AUTOGUI_STRINGS_OBJ) $(CONSTANTS_OBJ) $(GLOBALS_OBJ) $(DEBUG_OBJ) \
     $(GAMEPLAY_OBJ) $(MAIN_OBJ) $(MISC_OBJ) $(MLIB_OBJ) $(SEVAL_OBJ) $(TEXTUI_OBJ) \
     $(DB_OBJ) $(MEMDB_OBJ) $(BPDB_OBJ) $(BPDB_BITLIB_OBJ) $(BPDB_SCHEMES_OBJ) $(BPDB_MISC_OBJ) \
     $(TWOBITDB_OBJ) $(COLLDB_OBJ) $(UNIVHT_OBJ) $(UNIVDB_OBJ) \
     $(STRINGBUILDER_OBJ) $(HTTPCLIENT_OBJ) $(NETDB_OBJ) $(VISUALIZATION_OBJ) \
     $(FILEDB_OBJ) $(HASHWINDOW_OBJ) $(TIERDB_OBJ) $(LEVELFILE_OBJ) $(SYMDB_OBJ) $(INTERACT_OBJ) $(SHARDDB_OBJ) $(QUARTODB_OBJ)

SOLVERS=$(SOLVER_STD) $(SOLVER_LOOPY) $(SOLVER_LOOPYGA) $(SOLVER_ZERO) \
	$(SOLVER_LOOPYUP) $(SOLVER_BOTTOMUP) $(SOLVER_ALPHABETA) \
	$(SOLVER_RETROGRADE) $(SOLVER_OPENPOSITIONS) $(SOLVER_VS_STD) \
	$(SOLVER_VS_LOOPY) $(SOLVER_LOOPYPD)

MODULES=$(CORE) $(SOLVERS) hash.o memwatch.o

INCLUDES=analysis.h autoguistrings.h constants.h debug.h filedb.h gameplay.h gamesman.h \
	 globals.h misc.h mlib.h solveloopyga.h solveloopy.h solvestd.h seval.h\
	 memdb.h bpdb.h bpdb_bitlib.h bpdb_schemes.h bpdb_misc.h twobitdb.h db.h \
	 solvezero.h solveloopyup.h solveretrograde.h solvevsstd.h solvevsloopy.h \
	 textui.h setup.h httpclient.h netdb.h openPositions.h visualization.h filedb.h \
	 filedb/db.h hashwindow.h tierdb.h sharddb.h quartodb.h memwatch.h levelfile_generator.h symdb.h interact.h\
	 solveloopypd.h



##############################################################################
### Rules

all: gamesman.a

memdebug: CFLAGS += -DMEMWATCH
memdebug: all

dist-clean: clean
	@$(MAKE) -w -C filedb dist-clean
	rm -rf Makefile

clean:
	@$(MAKE) -w -C filedb clean
	rm -rf $(MODULES) *~ gamesman.a gamesdb.a

gamesman.a: $(MODULES)
	rm -f $@
	$(AR) $@ $(MODULES) ; $(RANLIB) $@
	cp gamesman.a ../gamesman.a ; $(RANLIB) ../gamesman.a

$(MODULES): %.o: %.c $(INCLUDES)
	$(CC) $(CFLAGS) -c -o $@ $<