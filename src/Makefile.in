##############################################################################
#
#  Makefile for GAMESMAN
#  The Finite, Two-person Perfect-Information Game Generator
#
#  (G)ame-independent
#  (A)utomatic
#  (M)ove-tree
#  (E)xhaustive
#  (S)earch,
#  (M)anipulation
#  (A)nd
#  (N)avigation
#
#  GamesCrafters Research Group, UC Berkeley
#  Supervised by Dan Garcia <ddgarcia@cs.berkeley.edu>
#
##############################################################################

# @WARNGC@ Makefile.in
# @configure_input@

CC		= @CC@
CCC		= @CXX@

TOPDIR		= ..
BINDIR		= $(TOPDIR)/bin
LIBDIR		= $(TOPDIR)/lib

CFLAGS		= @CFLAGS@ @TCLCFLAGS@ -std=gnu99
CCFLAGS 	= @CFLAGS@ @TCLCFLAGS@
LDFLAGS		= @LDFLAGS@ $(GMPLIBFLAGS) $(XMLLIBFLAGS)
TCLSOFLAGS	= @TCLSOFLAGS@
TCLEXEFLAGS	= @TCLEXEFLAGS@
TCLDBGX		= @TCLDBGX@
PYTHONCFLAGS	= @PYTHONCFLAGS@
PYTHONLIBFLAGS  = @PYTHONLIBFLAGS@
GMPLIBFLAGS    = @GMPLIBFLAGS@
XMLLIBFLAGS    = @XMLLIBFLAGS@

LIBSUFFIX	= @LIBSUFFIX@
OBJSUFFIX	= @OBJSUFFIX@
EXESUFFIX	= @EXESUFFIX@

ANOTO_PEN_DIR   = core/pen
ANOTO_PEN_OBJ   = $(ANOTO_PEN_DIR)/loader$(OBJSUFFIX) $(ANOTO_PEN_DIR)/stroke$(OBJSUFFIX)

##############################################################################
### Support for deprecated gamesman API
### For use with games that do not support gamesman 3 features
### As of 11/10 this section is RIP.
#DEP_INCLUDE		= deprecated/gsolve.h deprecated/gstrings.h
#DEP_OBJS		= deprecated/gmain$(OBJSUFFIX) deprecated/gsolve$(OBJSUFFIX) \
#			  deprecated/gfuzzy$(OBJSUFFIX) deprecated/gloopy$(OBJSUFFIX)
#DEP_GWISH_OBJ		= deprecated/tkAppInit$(OBJSUFFIX)


##############################################################################
### Games
###########  When adding games ensure that you put them in ALPHABETICAL ORDER.


GAMELINE_OBJ		= server$(OBJSUFFIX) client$(OBJSUFFIX)
GAMELINE_EXE		= $(BINDIR)/server$(EXESUFFIX) $(BINDIR)/client$(EXESUFFIX)

GWISH_OBJ		= tkAppInit$(OBJSUFFIX)

# Changed to gamesman.a -JJ
# This notice and the comments should go away eventually..

GAMESMAN_A		= gamesman.a
GAMESMAN_INCLUDE	:= gamesman.h core/gamesman.h core/analysis.h core/autoguistrings.h \
			  core/constants.h core/globals.h core/debug.h \
			  core/gameplay.h core/misc.h core/memdb.h \
			  core/bpdb.h core/bpdb_bitlib.h core/bpdb_schemes.h core/bpdb_misc.h \
			  core/textui.h core/filedb.h core/main.h \
			  core/solveloopyup.h core/setup.h core/visualization.h \
			  core/openPositions.h core/filedb.h core/filedb/db.h core/memwatch.h core/interact.h

GAMESMAN_DEPS		:= $(GAMESMAN_INCLUDE) $(shell ls core/*.c)

GAMESDB_A 		= gamesdb.a
GAMESDB_DEPS		:= $(shell ls core/filedb/*.c)

1210_EXE		= $(BINDIR)/m1210$(EXESUFFIX)	# The wonderful game of 1,2,...,10
1210_OBJ		= m1210$(OBJSUFFIX)
1210_SO			= $(LIBDIR)/libm1210$(LIBSUFFIX)

1TON_EXE		= $(BINDIR)/m1ton$(EXESUFFIX) #yay
1TON_OBJ		= m1ton$(OBJSUFFIX)
1TON_SO			= $(LIBDIR)/libm1ton$(LIBSUFFIX)

3SPOT_EXE		= $(BINDIR)/m3spot$(EXESUFFIX)	# The fantastically difficult game of 3 dot
3SPOT_OBJ		= m3spot$(OBJSUFFIX)
3SPOT_SO		= $(LIBDIR)/libm3spot$(LIBSUFFIX)

369MM_EXE		= $(BINDIR)/m369mm$(EXESUFFIX) # The ultimate game of 369 Men's Morris
369MM_OBJ		= m369mm$(OBJSUFFIX)
369MM_SO		= $(LIBDIR)/libm369mm$(LIBSUFFIX)

ABALONE_EXE		= $(BINDIR)/mabalone$(EXESUFFIX) #The TITillating game of abalone!
ABALONE_OBJ		= mabalone$(OBJSUFFIX)
ABALONE_TCL_OBJ		= tkAppInitAbalone$(OBJSUFFIX)
ABALONE_SO		= $(LIBDIR)/libmabalone$(LIBSUFFIX)

ACHI_EXE		= $(BINDIR)/machi$(EXESUFFIX)	# The interesting game of achi!
ACHI_OBJ		= machi$(OBJSUFFIX)
ACHI_SO			= $(LIBDIR)/libmachi$(LIBSUFFIX)

ADUGO_EXE		= $(BINDIR)/madugo$(EXESUFFIX)
ADUGO_OBJ		= madugo$(OBJSUFFIX)
ADUGO_SO		= $(LIBDIR)/libmadugo$(LIBSUFFIX)

AGO_EXE			= $(BINDIR)/mago$(EXESUFFIX)	# The infectious(c) game of Atari Go
AGO_OBJ			= mago$(OBJSUFFIX)

ALLQUEENS_EXE = $(BINDIR)/mallqueenschess$(EXESUFFIX) # all queens chess
ALLQUEENS_OBJ = mallqueenschess$(OBJSUFFIX)

ATAXX_EXE		= $(BINDIR)/mataxx$(EXESUFFIX)	# The infectious game of Ataxx
ATAXX_OBJ		= mataxx$(OBJSUFFIX)

ASALTO_EXE		= $(BINDIR)/masalto$(EXESUFFIX)	# Asalto
ASALTO_OBJ		= masalto$(OBJSUFFIX)
ASALTO_SO		= $(LIBDIR)/libmasalto$(LIBSUFFIX)

BAGHCHAL_EXE		= $(BINDIR)/mbaghchal$(EXESUFFIX)
BAGHCHAL_OBJ		= mbaghchal$(OBJSUFFIX)
BAGHCHAL_SO		= $(LIBDIR)/libmbaghchal$(LIBSUFFIX)

BEELINE_EXE		= $(BINDIR)/mbeeline$(EXESUFFIX)	# Beeline
BEELINE_OBJ		= mbeeline$(OBJSUFFIX)
BEELINE_SO		= $(LIBDIR)/libmbeeline$(LIBSUFFIX)

BLOCKING_EXE		= $(BINDIR)/mblocking$(EXESUFFIX)	# The awesome game of blocking
BLOCKING_OBJ		= mblocking$(OBJSUFFIX) 
BLOCKING_SO		= $(LIBDIR)/libmblocking$(LIBSUFFIX)

CAMBIO_EXE		= $(BINDIR)/mcambio$(EXESUFFIX)
CAMBIO_OBJ		= mcambio$(OBJSUFFIX)
CAMBIO_SO		= $(LIBDIR)/libmcambio$(LIBSUFFIX)

CHANGE_EXE		= $(BINDIR)/mchange$(EXESUFFIX)
CHANGE_OBJ		= mchange$(OBJSUFFIX)
CHANGE_SO		= $(LIBDIR)/libmchange$(LIBSUFFIX)

CHOPSTICKS_EXE		= $(BINDIR)/mchopsticks$(EXESUFFIX)
CHOPSTICKS_OBJ		= mchopsticks$(OBJSUFFIX)
CHOPSTICKS_SO		= $(LIBDIR)/libmchopsticks$(LIBSUFFIX)

CMASS_EXE		= $(BINDIR)/mcmass$(EXESUFFIX)	# The explosive game of critical mass
CMASS_OBJ		= mcmass$(OBJSUFFIX)
CMASS_SO		= $(LIBDIR)/libmcmass$(LIBSUFFIX)

COMBS_EXE		= $(BINDIR)/mcombs$(EXESUFFIX)	# The explosive game of critical mass
COMBS_OBJ		= mcombs$(OBJSUFFIX)
COMBS_SO		= $(LIBDIR)/libmcombs$(LIBSUFFIX)

CON_EXE			= $(BINDIR)/mcon$(EXESUFFIX)	# The cool game of Connections!
CON_OBJ			= mcon$(OBJSUFFIX)
CON_SO			= $(LIBDIR)/libmcon$(LIBSUFFIX)

CONNECT4_EXE			= $(BINDIR)/mconnect4$(EXESUFFIX)	# Connect4
CONNECT4_OBJ			= mconnect4$(OBJSUFFIX)
CONNECT4_SO			= $(LIBDIR)/libmconnect4$(LIBSUFFIX)

CHOMP_EXE		= $(BINDIR)/mchomp$(EXESUFFIX)	# The Delicious Game of Chomp
CHOMP_OBJ		= mchomp$(OBJSUFFIX)

CTOI_EXE		= $(BINDIR)/mctoi$(EXESUFFIX)	# The Amazing game of Chung-Toi
CTOI_OBJ		= mctoi$(OBJSUFFIX)
CTOI_SO			= $(LIBDIR)/libmctoi$(LIBSUFFIX)

DAO_EXE 		= $(BINDIR)/mdao$(EXESUFFIX)	# The loopy game of Dao
DAO_OBJ			= mdao$(OBJSUFFIX)
DAO_SO			= $(LIBDIR)/libmdao$(LIBSUFFIX)

DINODODGEM_EXE		= $(BINDIR)/mdinododgem$(EXESUFFIX) # The prehistoric game of Dino Dodgem
DINODODGEM_OBJ		= mdinododgem$(OBJSUFFIX)
DINODODGEM_SO		= $(LIBDIR)/libmdinododgem$(LIBSUFFIX)

DOMINEERING_EXE   = $(BINDIR)/mdomineering$(EXESUFFIX) # The rich game of domineering
DOMINEERING_OBJ	  = mdomineering$(OBJSUFFIX)

## Warning: DNB uses Deprecated API
DNB_EXE			= $(BINDIR)/mdnb$(EXESUFFIX)	# The awesome game of Dots-and-Boxes
DNB_OBJ			= mdnb$(OBJSUFFIX)
DNB_SO			= $(LIBDIR)/libmdnb$(LIBSUFFIX)
DNB_PEN_OBJ		= $(ANOTO_PEN_DIR)/pdnb$(OBJSUFFIX)

DODGEM_EXE		= $(BINDIR)/mdodgem$(EXESUFFIX)	# The genius game of Dodgem
DODGEM_OBJ		= mdodgem$(OBJSUFFIX)
DODGEM_SO		= $(LIBDIR)/libmdodgem$(LIBSUFFIX)

FANDAN_EXE		= $(BINDIR)/mfandan$(EXESUFFIX) 
FANDAN_OBJ		= mfandan$(OBJSUFFIX)

FIVEFIELDKONO_EXE = $(BINDIR)/mfivefieldkono$(EXESUFFIX)
FIVEFIELDKONO_OBJ = mfivefieldkono$(OBJSUFFIX)

FORESTFOX_EXE			= $(BINDIR)/mforestfox$(EXESUFFIX)	# The game Fox!
FORESTFOX_OBJ			= mforestfox$(OBJSUFFIX)
FORESTFOX_SO			= $(LIBDIR)/libmforestfox$(LIBSUFFIX)

## Warning: uses computec, and therefore a different tkAppInit.c
## Warning: Foxes uses Deprecated API
## The above warning does not apply anymore as of 11-10-2005. The C code uses current API now.
FOXES_EXE		= $(BINDIR)/mfoxes$(EXESUFFIX)	# The unreasonably witty game of foxes & geese
FOXES_OBJ		= mfoxes$(OBJSUFFIX)
FOXES_SO		= $(LIBDIR)/libmfoxes$(LIBSUFFIX)

GAMEOFY_EXE			= $(BINDIR)/mgameofy$(EXESUFFIX)	# Game Of Y
GAMEOFY_OBJ			= mgameofy$(OBJSUFFIX)
GAMEOFY_SO			= $(LIBDIR)/libmgameofy$(LIBSUFFIX)

GO_EXE			= $(BINDIR)/migo$(EXESUFFIX)    # The incomporably ancient game of go
GO_OBJ			= migo$(OBJSUFFIX)
GO_SO			= $(LIBDIR)/libmigo$(LIBSUFFIX)

GOBBLET_EXE		= $(BINDIR)/mgobblet$(EXESUFFIX) # The ridiculously complex game of Gobblet
GOBBLET_OBJ		= mgobblet$(OBJSUFFIX)
GOBBLET_SO		= $(LIBDIR)/libmgobblet$(LIBSUFFIX)

GRAPH_EXE		= $(BINDIR)/mgraph$(EXESUFFIX)	# The generic graph game
GRAPH_OBJ		= mgraph$(OBJSUFFIX)

GRAPHGAME_EXE		= $(BINDIR)/mgraphgame$(EXESUFFIX)	# The sample game to demo draw level and remoteness
GRAPHGAME_OBJ		= mgraphgame$(OBJSUFFIX)

HAREGAME_EXE		= $(BINDIR)/mharegame$(EXESUFFIX) # The game of Hounds and Hares
HAREGAME_OBJ		= mharegame$(OBJSUFFIX)

HEX_EXE			= $(BINDIR)/mhex$(EXESUFFIX) # The classic game of Hex
HEX_OBJ			= mhex$(OBJSUFFIX)

HORSE_EXE		= $(BINDIR)/mhorse$(EXESUFFIX) # The game of Horseshoe
HORSE_OBJ		= mhorse$(OBJSUFFIX)
HORSE_SO		= $(LIBDIR)/libmhorse$(LIBSUFFIX)

ICEBLOCKS_EXE		= $(BINDIR)/miceblocks$(EXESUFFIX)
ICEBLOCKS_OBJ		= miceblocks$(OBJSUFFIX)
ICEBLOCKS_SO		= $(LIBDIR)/libmiceblocks$(LIBSUFFIX)

JAN4X4_EXE = $(BINDIR)/mjan$(EXESUFFIX) # A simple games
JAN4X4_OBJ = mjan$(OBJSUFFIX)
JAN4X4_SO  = $(LIBDIR)/libmjan$(LIBSUFFIX)

JOUST_EXE		= $(BINDIR)/mjoust$(EXESUFFIX)
JOUST_OBJ		= mjoust$(OBJSUFFIX)
JOUST_SO		= $(LIBDIR)/libmjoust$(LIBSUFFIX)

KONANE_EXE		= $(BINDIR)/mkonane$(EXESUFFIX)
KONANE_OBJ		= mkonane$(OBJSUFFIX)
KONANE_SO		= $(LIBDIR)/libmkonane$(LIBSUFFIX)

KONO_EXE		= $(BINDIR)/mkono$(EXESUFFIX)
KONO_OBJ		= mkono$(OBJSUFFIX)
KONO_SO			= $(LIBDIR)/libmkono$(LIBSUFFIX)

LEWTH_EXE		= $(BINDIR)/mlewth$(EXESUFFIX) # Lewthwaite's game
LEWTH_OBJ		= mlewth$(OBJSUFFIX)
LEWTH_SO		= $(LIBDIR)/libmlewth$(LIBSUFFIX)

LGAME_EXE		= $(BINDIR)/mLgame$(EXESUFFIX)	# The lovely game of L
LGAME_OBJ		= mLgame$(OBJSUFFIX)
LGAME_SO		= $(LIBDIR)/libmLgame$(LIBSUFFIX)

LITE3_EXE		= $(BINDIR)/mlite3$(EXESUFFIX)	# The illuminating game of lite3
LITE3_OBJ		= mlite3$(OBJSUFFIX) 
LITE3_SO		= $(LIBDIR)/libmlite3$(LIBSUFFIX)

LOA_EXE			= $(BINDIR)/mloa$(EXESUFFIX)
LOA_OBJ			= mloa$(OBJSUFFIX)

MANCALA_EXE		= $(BINDIR)/mmancala$(EXESUFFIX) # The manic game of Mancala
MANCALA_OBJ		= mmancala$(OBJSUFFIX)
MANCALA_SO		= $(LIBDIR)/libmmancala$(LIBSUFFIX)

NOTAKTO_EXE			= $(BINDIR)/mnotakto$(EXESUFFIX)	# Notakto
NOTAKTO_OBJ			= mnotakto$(OBJSUFFIX)
NOTAKTO_SO			= $(LIBDIR)/libmnotakto$(LIBSUFFIX)

NUTTT_EXE		= $(BINDIR)/mnuttt$(EXESUFFIX) # sliding version of tic-tac-toe
NUTTT_OBJ		= mnuttt$(OBJSUFFIX)
NUTTT_SO		= $(LIBDIR)/libmnuttt$(LIBSUFFIX)

OANDC_EXE   = $(BINDIR)/moandc$(EXESUFFIX)
OANDC_OBJ   = moandc$(OBJSUFFIX)
OANDC_SO    = $(LIBDIR)/libmoandc$(LIBSUFFIX)

OOE_EXE			= $(BINDIR)/mooe$(EXESUFFIX) # ooe
OOE_OBJ			= mooe$(OBJSUFFIX)
OOE_SO			= $(LIBDIR)/libmooe$(LIBSUFFIX)

ONEDCHESS_EXE	= $(BINDIR)/m1dchess$(EXESUFFIX) # 1D Chess
ONEDCHESS_OBJ	= m1dchess$(OBJSUFFIX)
ONEDCHESS_SO	= $(LIBDIR)/libm1dchess$(LIBSUFFIX)

OTHELLO_EXE		= $(BINDIR)/mothello$(EXESUFFIX)	# The Out-Of-The-Blue game of Othello
OTHELLO_OBJ		= mothello$(OBJSUFFIX)
OTHELLO_SO		= $(LIBDIR)/libmothello$(LIBSUFFIX)

PONGHAUKI_EXE		= $(BINDIR)/mponghauki$(EXESUFFIX)	# Kono
PONGHAUKI_OBJ		= mponghauki$(OBJSUFFIX)
PONGHAUKI_SO		= $(LIBDIR)/libmponghauki$(LIBSUFFIX)

PYLOS_EXE		= $(BINDIR)/mpylos$(EXESUFFIX)	# The awesome game of pylos
PYLOS_OBJ		= mpylos$(OBJSUFFIX)
PYLOS_SO		= $(LIBDIR)/libmpylos$(LIBSUFFIX)

QLAND_EXE		= $(BINDIR)/mqland$(EXESUFFIX)
QLAND_OBJ		= mqland$(OBJSUFFIX)
QLAND_SO		= $(LIBDIR)/libmqland$(LIBSUFFIX)

QUARTO_EXE		= $(BINDIR)/mquarto$(EXESUFFIX)	# QUARTO
QUARTO_OBJ		= mquarto$(OBJSUFFIX)
QUARTO_SO		= $(LIBDIR)/libmquarto$(LIBSUFFIX)

QUICKCHESS_EXE		= $(BINDIR)/mquickchess$(EXESUFFIX)	# QUICKCHESS
QUICKCHESS_OBJ		= mquickchess$(OBJSUFFIX)
QUICKCHESS_SO		= $(LIBDIR)/libmquickchess$(LIBSUFFIX)

QX_EXE			= $(BINDIR)/mqx$(EXESUFFIX)	# The great game of quick cross
QX_OBJ			= mqx$(OBJSUFFIX)
QX_SO			= $(LIBDIR)/libmqx$(LIBSUFFIX)

RCHECKERS_EXE    	= $(BINDIR)/mrcheckers$(EXESUFFIX)
RCHECKERS_OBJ		= mrcheckers$(OBJSUFFIX)
RCHECKERS_SO		= $(LIBDIR)/libmrcheckers$(LIBSUFFIX)

RINFIN_EXE    	= $(BINDIR)/mrInfin2$(EXESUFFIX)
RINFIN_OBJ		= mrInfin2$(OBJSUFFIX)
RINFIN_SO		= $(LIBDIR)/libmrInfin2$(LIBSUFFIX)

RUBIKSMAGIC_EXE		= $(BINDIR)/mrubiksmagic$(EXESUFFIX)
RUBIKSMAGIC_OBJ		= mrubiksmagic$(OBJSUFFIX)
RUBIKSMAGIC_SO		= $(LIBDIR)/libmrubiksmagic$(LIBSUFFIX)

SANTORINI_EXE   = $(BINDIR)/msantorini$(EXESUFFIX)
SANTORINI_OBJ   = msantorini$(OBJSUFFIX)
SANTORINI_SO    = $(LIBDIR)/libmsantorini$(LIBSUFFIX)

SEEGA_EXE    	= $(BINDIR)/mseega$(EXESUFFIX)
SEEGA_OBJ		= mseega$(OBJSUFFIX)
SEEGA_SO		= $(LIBDIR)/libmseega$(LIBSUFFIX)

SHOGI_EXE    	= $(BINDIR)/mhshogi$(EXESUFFIX)
SHOGI_OBJ		= mhshogi$(OBJSUFFIX)
SHOGI_SO		= $(LIBDIR)/libmhshogi$(LIBSUFFIX)

SIM_EXE			= $(BINDIR)/msim$(EXESUFFIX)	# The simple game of sim
SIM_OBJ			= msim$(OBJSUFFIX)
SIM_SO			= $(LIBDIR)/libmsim$(LIBSUFFIX)

SLIDE5_EXE   = $(BINDIR)/mslide5$(EXESUFFIX) # The sliding game of slide-5
SLIDE5_OBJ   = mslide5$(OBJSUFFIX)
SLIDE5_SO    = $(LIBDIR)/libmslide5$(LIBSUFFIX)


SLIDEN_EXE		= $(BINDIR)/mslideN$(EXESUFFIX)	# The mysterious game of slide-N
SLIDEN_OBJ		= mslideN$(OBJSUFFIX)
SLIDEN_SO		= $(LIBDIR)/libmslideN$(LIBSUFFIX)

SNAKE_EXE		= $(BINDIR)/msnake$(EXESUFFIX) # The slippery game of Snake
SNAKE_OBJ		= msnake$(OBJSUFFIX)
SNAKE_SO		= $(LIBDIR)/libmsnake$(LIBSUFFIX)

SQUAREDANCE_EXE		= $(BINDIR)/msquaredance$(EXESUFFIX)
SQUAREDANCE_OBJ		= msquaredance$(OBJSUFFIX)
SQUAREDANCE_SO		= $(LIBDIR)/libmsquaredance$(LIBSUFFIX)

STT_EXE			= $(BINDIR)/mstt$(EXESUFFIX)	# The shifty game of shift-tac-toe
STT_OBJ			= mstt$(OBJSUFFIX)
STT_SO			= $(LIBDIR)/libmstt$(LIBSUFFIX)

SWANS_EXE		= $(BINDIR)/mswans$(EXESUFFIX)
SWANS_OBJ		= mswans$(OBJSUFFIX)
SWANS_SO		= $(LIBDIR)/libmswans$(LIBSUFFIX)

TACTIX_EXE		= $(BINDIR)/mtactix$(EXESUFFIX)	# The great game of Tac Tix
TACTIX_OBJ		= mtactix$(OBJSUFFIX)
TACTIX_SO		= $(LIBDIR)/libmtactix$(LIBSUFFIX)
TACTIX_PEN_OBJ		= $(ANOTO_PEN_DIR)/ptactix$(OBJSUFFIX)

TILECHESS_EXE		= $(BINDIR)/mtilechess$(EXESUFFIX) # The intense game of Tile Chess
TILECHESS_OBJ		= mtilechess$(OBJSUFFIX)
TILECHESS_SO		= $(LIBDIR)/libmtilechess$(LIBSUFFIX)

TOOTNOTTO_EXE		= $(BINDIR)/mtootnotto$(EXESUFFIX) #The tasty game of Toot and Otto
TOOTNOTTO_OBJ		= mtootnotto$(OBJSUFFIX)
TOOTNOTTO_SO		= $(LIBDIR)/libmtootnotto$(LIBSUFFIX)

TOPITOP_EXE		= $(BINDIR)/mtopitop$(EXESUFFIX) #The belligerent game of Topitop
TOPITOP_OBJ		= mtopitop$(OBJSUFFIX)
TOPTIOP_SO		= $(LIBDIR)/libmtopitop$(LIBSUFFIX)

TORE_EXE		= $(BINDIR)/mtore$(EXESUFFIX)	# The great game of Tac Tix
TORE_OBJ		= mtore$(OBJSUFFIX)
TORE_SO			= $(LIBDIR)/libmtore$(LIBSUFFIX)

TTC_EXE			= $(BINDIR)/mttc$(EXESUFFIX) #The tantalizing game of tic-tac-chec
TTC_OBJ			= mttc$(OBJSUFFIX)
TTC_SO			= $(LIBDIR)/libmttc$(LIBSUFFIX)

TTTIER_EXE		= $(BINDIR)/mtttier$(EXESUFFIX) #The Tier-based game of Tic-Tac-Tier
TTTIER_OBJ		= mtttier$(OBJSUFFIX)
TTTIER_SO       = $(LIBDIR)/libmtttier$(LIBSUFFIX)

TTT_EXE			= $(BINDIR)/mttt$(EXESUFFIX)	# The awesome game of Tic-Tac-Toe
TTT_OBJ			= mttt$(OBJSUFFIX)
TTTPPM_OBJ		= mtttppm$(OBJSUFFIX)
TTT_SO			= $(LIBDIR)/libmttt$(LIBSUFFIX)
TTT_PEN_OBJ		= $(ANOTO_PEN_DIR)/pttt$(OBJSUFFIX)

TT2_EXE			= $(BINDIR)/mtt2$(EXESUFFIX)	# The also awesome game of Tic-Tac-Two
TT2_OBJ			= mtt2$(OBJSUFFIX)

TTTWO_EXE		= $(BINDIR)/mtttwo$(EXESUFFIX)
TTTWO_OBJ		= mtttwo$(OBJSUFFIX)
TTTWO_SO		= $(LIBDIR)/libmtttwo$(LIBSUFFIX)

WIN4_EXE		= $(BINDIR)/mwin4$(EXESUFFIX)	# The cool game of Connect-4
WIN4_OBJ		= mwin4$(OBJSUFFIX)
WIN4_SO			= $(LIBDIR)/libmwin4$(LIBSUFFIX)

WINKERS_EXE		= $(BINDIR)/mwinkers$(EXESUFFIX) #The mysterious game of winkers
WINKERS_OBJ		= mwinkers$(OBJSUFFIX)
WINKERS_SO		= $(LIBDIR)/libmwinkers$(LIBSUFFIX)

WUZHI_EXE		= $(BINDIR)/mwuzhi$(EXESUFFIX)	# Kono
WUZHI_OBJ		= mwuzhi$(OBJSUFFIX)
WUZHI_SO		= $(LIBDIR)/libmwuzhi$(LIBSUFFIX)

XIGUA_EXE		= $(BINDIR)/mxigua$(EXESUFFIX)	# Kono
XIGUA_OBJ		= mxigua$(OBJSUFFIX)
XIGUA_SO		= $(LIBDIR)/libmxigua$(LIBSUFFIX)

YOTE_EXE		= $(BINDIR)/myote$(EXESUFFIX)
YOTE_OBJ		= myote$(OBJSUFFIX)
YOTE_SO			= $(LIBDIR)/libmyote$(LIBSUFFIX)

############                       IMPORTANT!
### Please Ensure that all games are added in ALPHABETICAL order to the section above.
############

##############################################################################
### Game categories

### Games written in C that work with the current gamesman core:
# Object files
CGAMEOBJS = $(1210_OBJ) $(369MM_OBJ) $(3SPOT_OBJ) $(ABALONE_OBJ) $(ACHI_OBJ) $(ADUGO_OBJ) \
            $(ALLQUEENS_OBJ) $(BAGHCHAL_OBJ) $(BEELINE_OBJ) $(CHANGE_OBJ) $(CHOMP_OBJ) \
			$(CHOPSTICKS_OBJ) $(CONNECT4_OBJ) $(CTOI_OBJ) $(DAO_OBJ) $(DINODODGEM_OBJ) \
			$(DODGEM_OBJ) $(DOMINEERING_OBJ) $(FIVEFIELDKONO_OBJ) $(FORESTFOX_OBJ) $(FOXES_OBJ) \
			$(GAMEOFY_OBJ) $(GRAPHGAME_OBJ) $(HAREGAME_OBJ) $(HORSE_OBJ) $(JAN4X4_OBJ) $(JOUST_OBJ) \
			$(KONANE_OBJ) $(KONO_OBJ) $(LEWTH_OBJ) $(LGAME_OBJ) $(LITE3_OBJ) $(MANCALA_OBJ) \
			$(NOTAKTO_OBJ) $(NUTTT_OBJ) $(ONEDCHESS_OBJ) $(OOE_OBJ) $(OTHELLO_OBJ) $(QUARTO_OBJ) \
			$(QUICKCHESS_OBJ) $(QX_OBJ) $(SIM_OBJ) $(SLIDE5_OBJ) $(SQUAREDANCE_OBJ) $(STT_OBJ) \
			$(SWANS_OBJ) $(TACTIX_OBJ) $(TOPITOP_OBJ) $(TORE_OBJ) $(TTT_OBJ) $(TTTWO_OBJ) $(YOTE_OBJ) \
			$(1TON_OBJ) $(AGO_OBJ) $(ASALTO_OBJ) $(ATAXX_OBJ) $(BLOCKING_OBJ) $(CAMBIO_OBJ) \
			$(CMASS_OBJ) $(COMBS_OBJ) $(FANDAN_OBJ) $(GO_OBJ) $(GOBBLET_OBJ) $(HEX_OBJ) \
			$(ICEBLOCKS_OBJ) $(LOA_OBJ) $(OANDC_OBJ) $(PONGHAUKI_OBJ) $(PYLOS_OBJ) \
			$(QLAND_OBJ) $(RCHECKERS_OBJ) $(RINFIN_OBJ) $(RUBIKSMAGIC_OBJ) $(SANTORINI_OBJ) \
			$(SEEGA_OBJ) $(SHOGI_OBJ) $(SLIDEN_OBJ) $(SNAKE_OBJ) $(TILECHESS_OBJ) \
			$(TOOTNOTTO_OBJ) $(TT2_OBJ) $(TTC_OBJ) $(TTTPPM_OBJ) $(TTTIER_OBJ) $(WIN4_OBJ) \
			$(WINKERS_OBJ) $(WUZHI_OBJ) $(XIGUA_OBJ)

# Binary files
CGAMES =    $(1210_EXE) $(369MM_EXE) $(3SPOT_EXE) $(ABALONE_EXE) $(ACHI_EXE) $(ADUGO_EXE) \
            $(ALLQUEENS_EXE) $(BAGHCHAL_EXE) $(BEELINE_EXE) $(CHANGE_EXE) $(CHOMP_EXE) \
            $(CHOPSTICKS_EXE) $(CONNECT4_EXE) $(CTOI_EXE) $(DAO_EXE) $(DINODODGEM_EXE) \
            $(DODGEM_EXE) $(DOMINEERING_EXE) $(FIVEFIELDKONO_EXE) $(FORESTFOX_EXE) $(FOXES_EXE) \
            $(GAMEOFY_EXE) $(GRAPHGAME_EXE) $(HAREGAME_EXE) $(HORSE_EXE) $(JAN4X4_EXE) $(JOUST_EXE) \
            $(KONANE_EXE) $(KONO_EXE) $(LEWTH_EXE) $(LGAME_EXE) $(LITE3_EXE) $(MANCALA_EXE) \
			$(NOTAKTO_EXE) $(NUTTT_EXE) $(ONEDCHESS_EXE) $(OOE_EXE) $(OTHELLO_EXE) $(QUARTO_EXE) \
            $(QUICKCHESS_EXE) $(QX_EXE) $(SIM_EXE) $(SLIDE5_EXE) $(SQUAREDANCE_EXE) $(STT_EXE) \
            $(SWANS_EXE) $(TACTIX_EXE) $(TOPITOP_EXE) $(TORE_EXE) $(TTT_EXE) $(TTTWO_EXE) $(YOTE_EXE) \
            $(1TON_EXE) $(AGO_EXE) $(ASALTO_EXE) $(ATAXX_EXE) $(BLOCKING_EXE) $(CAMBIO_EXE) \
            $(CMASS_EXE) $(COMBS_EXE) $(FANDAN_EXE) $(GO_EXE) $(GOBBLET_EXE) $(HEX_EXE) \
            $(ICEBLOCKS_EXE) $(LOA_EXE) $(OANDC_EXE) $(PONGHAUKI_EXE) $(PYLOS_EXE) \
            $(QLAND_EXE) $(RCHECKERS_EXE) $(RINFIN_EXE) $(RUBIKSMAGIC_EXE) $(SANTORINI_EXE) \
            $(SEEGA_EXE) $(SHOGI_EXE) $(SLIDEN_EXE) $(SNAKE_EXE) $(TILECHESS_EXE) \
			$(TOOTNOTTO_EXE) $(TT2_EXE) $(TTC_EXE) $(TTTPPM_EXE) $(TTTIER_EXE) $(WIN4_EXE) \
			$(WINKERS_EXE) $(WUZHI_EXE) $(XIGUA_EXE)

# Tcl/Tk libraries
CTCL =  $(1210_SO) $(TIGERS_SO) $(WINKERS_SO) $(ASALTO_SO) $(OTHELLO_SO) $(SIM_SO) $(STT_SO) \
    $(DODGEM_SO) $(LGAME_SO) $(3SPOT_SO) $(BLOCKING_SO) \
	$(CMASS_SO) $(LITE3_SO) $(CTOI_SO) $(WIN4_SO) $(RUBIKSMAGIC_SO) \
	$(QX_SO) $(SLIDEN_SO) $(SNAKE_SO) $(CHANGE_SO) $(HORSE_SO) \
	$(DINODODGEM_SO) $(MANCALA_SO) $(RINFIN_SO) $(SWANS_SO) $(WUZHI_SO) \
	$(QLAND_SO) $(SEEGA_SO) $(KONO_SO) $(OOE_SO) $(TORE_SO) $(COMBS_SO) \
	$(FOXES_SO) $(NUTTT_SO) $(QUARTO_SO) $(XIGUA_SO) $(SHOGI_SO) \
	$(ICEBLOCKS_SO) $(LEWTH_SO) $(DAO_SO) $(TOOTNOTTO_SO) $(CAMBIO_SO) $(BAGHCHAL_SO) \
	$(TTTIER_SO) $(369MM_SO) $(TOPITOP_SO) \
	$(TTTWO_SO) $(CONNECT4_SO) $(GAMEOFY_SO) $(SANTORINI_SO) $(BEELINE_SO) $(ONEDCHESS_SO) $(NOTAKTO_SO) \
	$(FORESTFOX_SO) $(SLIDE5_SO) $(KONANE_SO) $(YOTE_SO) $(ADUGO_SO) $(OANDC_SO) $(CHOPSTICKS_SO)

### Games written in C++ that work with the current gamesman core:
# Object files
CCGAMEOBJS = $(CON_OBJ) $(DNB_OBJ)

# Binary files
CCGAMES = $(CON_EXE)

# Tcl/Tk libraries
CCTCL = $(CON_SO)

### Games that need special attention
SPECIALGAMES = $(TTT_EXE) $(GRAPH_EXE) $(9MM_EXE) $(ACHI_EXE) $(ABALONE_EXE) $(DNB_EXE) $(TACTIX_EXE)
SPECIALTCL = $(TTT_SO) $(ACHI_SO) $(ABALONE_SO) $(DNB_SO) $(TACTIX_SO)


##############################################################################
### Global build rules

all: 		text_all @COMPILEGRAPHICS@

all-memdebug:	CFLAGS+= -DMEMWATCH
all-memdebug:	all

memdebug:	CFLAGS += -DMEMWATCH
memdebug:
		@$(MAKE) -w -C core memdebug
		@$(MAKE) -w -C core/filedb memdebug
		@$(MAKE) -w all-memdebug

dist-clean:		clean
		@$(MAKE) -w -C core dist-clean
		rm -rf Makefile

clean:		clean-bins
		@$(MAKE) -w -C core clean
		rm -rf $(CTCL) $(CCTCL) $(SPECIALTCL) $(GAMELINE_EXE) \
		$(LIBDIR)/*~ $(BINDIR)/solve $(BINDIR)/*~ @RMOBJS@ $(DEP_OBJS) \
		$(DEP_GWISH_OBJ) *~ $(GAMESMAN_A) $(GAMESDB_A) \
		$(ANOTO_PEN_OBJ) $(TTT_PEN_OBJ) $(TACTIX_EXE) $(DNB_PEN_OBJ) $(TACTIX_PEN_OBJ)

clean-bins:
		rm -rf $(CGAMES) $(CCGAMES) $(SPECIALGAMES)

#text_all:	$(CGAMES) $(CCGAMES) $(SPECIALGAMES)
text_all: $(CGAMES)
so_all:		text_all $(CTCL) $(CCTCL) $(SPECIALTCL)
gameline:	$(GAMELINE_EXE)


##############################################################################
### Special files (non-games):

$(DEP_OBJS): %$(OBJSUFFIX): %.c $(DEP_INCLUDE)
	$(CC) $(CFLAGS) -c -o $@ $<

$(GAMELINE_OBJ): %$(OBJSUFFIX): %.c
	$(CC) $(CFLAGS) -c -o $@ $<

$(GAMELINE_EXE): $(BINDIR)/%$(EXESUFFIX): %$(OBJSUFFIX)
	$(CC) -o $@ $< $(LDFLAGS)

#$(GAMESMAN_OBJ): %$(OBJSUFFIX): %.c $(GAMESMAN_INCLUDE)
#	$(CC) $(CFLAGS) -c -o $@ $<
$(GAMESMAN_A): $(GAMESMAN_DEPS)
	@$(MAKE) -w -C core all

$(GAMESDB_A): $(GAMESDB_DEPS)
	@$(MAKE) -w -C core/filedb all

$(GWISH_OBJ): %$(OBJSUFFIX): %.c $(GAMESMAN_INCLUDE)
	$(CC) $(CFLAGS) -c -o $@ $<

$(ABALONE_TCL_OBJ): %$(OBJSUFFIX): %.c $(GAMESMAN_INCLUDE)
	$(CC) $(CFLAGS) -c -o $@ $<

$(HASH_OBJ): %$(OBJSUFFIX): %.c $(HASH_INCLUDE)
	$(CC) $(CFLAGS) -c -o $@ $<

$(LOOPYGASOLVER_OBJ): %$(OBJSUFFIX): %.c $(LOOPYGASOLVER_INCLUDE)
	$(CC) $(CFLAGS) -c -o $@ $<

$(LOOPYUPSOLVER_OBJ): %$(OBJSUFFIX): %.c $(LOOPYUPSOLVER_INCLUDE)
	$(CC) $(CFLAGS) -c -o $@ $<

$(ANOTO_PEN_DIR)/%$(OBJSUFFIX) : $(ANOTO_PEN_DIR)/%.c
	$(CC) $(CFLAGS) -c -o $@ $<

##############################################################################
### Generic rules for games:

$(CGAMEOBJS): %$(OBJSUFFIX): %.c $(GAMESMAN_INCLUDE)
	$(CC) $(CFLAGS) $(TCLCFLAGS) -c -o $@ $<

$(CGAMES): $(BINDIR)/%$(EXESUFFIX): %$(OBJSUFFIX) $(GAMESMAN_A) $(GAMESDB_A)
	$(CC) -o $@ $< $(GAMESMAN_A) $(GAMESDB_A) $(LDFLAGS) $(TCLEXEFLAGS)

test-%$(OBJSUFFIX): %.c $(GAMESMAN_INCLUDE)
	$(CC) $(CFLAGS) $(TCLCFLAGS) -c -o $@ $<

test-%: test-%$(OBJSUFFIX) $(GAMESMAN_A) $(GAMESDB_A)
	$(CC) -o $@ $< $(GAMESMAN_A) $(GAMESDB_A) $(LDFLAGS) $(TCLEXEFLAGS)

$(CTCL): $(LIBDIR)/lib%$(LIBSUFFIX): %$(OBJSUFFIX) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ)
	$(CC) -o $@ $< $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ) $(LDFLAGS) $(TCLSOFLAGS)

$(CCGAMEOBJS): %$(OBJSUFFIX): %.cc $(GAMESMAN_INCLUDE)
	$(CCC) $(CCFLAGS) $(TCLCFLAGS) -c -o $@ $<

$(CCGAMES): $(BINDIR)/%$(EXESUFFIX): %$(OBJSUFFIX) $(GAMESMAN_A) $(GAMESDB_A)
	$(CCC) -o $@ $< $(GAMESMAN_A) $(GAMESDB_A) $(LDFLAGS) $(TCLEXEFLAGS)

$(CCTCL): $(LIBDIR)/lib%$(LIBSUFFIX): %$(OBJSUFFIX) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ) 
	$(CCC) -o $@ $< $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ) $(LDFLAGS) $(TCLSOFLAGS)

##############################################################################
### Special rules for deprecated games and others that need special attention

#$(ACHI_EXE): $(ACHI_OBJ) $(TTTPPM_OBJ) $(GAMESMAN_A) $(GAMESDB_A)
#	$(CC) -o $@ $(ACHI_OBJ) $(TTTPPM_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(LDFLAGS) $(TCLEXEFLAGS)

#$(ACHI_SO): $(ACHI_OBJ) $(TTTPPM_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ)
#	$(CC) -o $@ $(ACHI_OBJ) $(TTTPPM_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ) $(LDFLAGS) $(TCLSOFLAGS)

#$(ABALONE_EXE): $(ABALONE_OBJ) $(GAMESMAN_A) $(GAMESDB_A)
#	$(CC) -o $@ $(ABALONE_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(LDFLAGS) $(TCLEXEFLAGS)

#$(ABALONE_SO): $(ABALONE_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(ABALONE_TCL_OBJ)
#	$(CC) -o $@ $(ABALONE_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(ABALONE_TCL_OBJ) $(LDFLAGS) $(TCLSOFLAGS)

#$(QUARTO_OBJ): mquarto.c $(GAMESMAN_INCLUDE)
#	$(CC) $(CFLAGS) $(TCLCFLAGS) -c -std=c99 -o $@ $<

#$(TTT_EXE): $(TTT_OBJ) $(TTT_PEN_OBJ) $(ANOTO_PEN_OBJ) $(TTTPPM_OBJ) $(GAMESMAN_A) $(GAMESDB_A)
#	$(CC) -o $@ $(TTT_OBJ) $(TTT_PEN_OBJ) $(ANOTO_PEN_OBJ) $(TTTPPM_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(LDFLAGS) $(TCLEXEFLAGS)

#$(TTT_SO): $(TTT_OBJ) $(TTT_PEN_OBJ) $(ANOTO_PEN_OBJ) $(TTTPPM_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ)
#	$(CC) -o $@ $(TTT_OBJ) $(TTT_PEN_OBJ) $(ANOTO_PEN_OBJ) $(TTTPPM_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ) $(LDFLAGS) $(TCLSOFLAGS)

#$(DNB_EXE): $(DNB_OBJ) $(DNB_PEN_OBJ) $(ANOTO_PEN_OBJ) $(GAMESMAN_A) $(GAMESDB_A)
#	$(CCC) -o $@ $(DNB_OBJ) $(DNB_PEN_OBJ) $(ANOTO_PEN_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(LDFLAGS) $(TCLEXEFLAGS)

#$(DNB_SO): $(DNB_OBJ) $(DNB_PEN_OBJ) $(ANOTO_PEN_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ)
#	$(CCC) -o $@ $(DNB_OBJ) $(DNB_PEN_OBJ) $(ANOTO_PEN_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ) $(LDFLAGS) $(TCLSOFLAGS)

#$(TACTIX_EXE): $(TACTIX_OBJ) $(TACTIX_PEN_OBJ) $(ANOTO_PEN_OBJ) $(GAMESMAN_A) $(GAMESDB_A)
#	$(CC) -o $@ $(TACTIX_OBJ) $(TACTIX_PEN_OBJ) $(ANOTO_PEN_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(LDFLAGS) $(TCLEXEFLAGS)

#$(TACTIX_SO): $(TACTIX_OBJ) $(TACTIX_PEN_OBJ) $(ANOTO_PEN_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ)
#	$(CC) -o $@ $(TACTIX_OBJ) $(TACTIX_PEN_OBJ) $(ANOTO_PEN_OBJ) $(GAMESMAN_A) $(GAMESDB_A) $(GWISH_OBJ) $(LDFLAGS) $(TCLSOFLAGS)

pygamesman: $(GAMESMAN_A) $(GAMESDB_A)
	$(CC) -o pygamesman$(OBJSUFFIX) $(PYTHONCFLAGS) pygamesman.c
	$(CC) -o pygamesman$(LIBSUFFIX) $(PYTHONLIBFLAGS) pygamesman$(OBJSUFFIX) $(GAMESMAN_A) $(GAMESDB_A)
